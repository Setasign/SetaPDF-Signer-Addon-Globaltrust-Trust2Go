<?php

declare(strict_types=1);

use Ramsey\Uuid\Uuid;
use setasign\SetaPDF\Signer\Module\GlobalTrustTrust2Go\Batch;
use setasign\SetaPDF\Signer\Module\GlobalTrustTrust2Go\Client;
use GuzzleHttp\Client as GuzzleClient;
use GuzzleHttp\Handler\CurlHandler;
use Http\Factory\Guzzle\RequestFactory;
use Http\Factory\Guzzle\StreamFactory;
use Mjelamanov\GuzzlePsr18\Client as Psr18Wrapper;

ini_set('display_errors', '1');
ini_set('display_startup_errors', '1');
error_reporting(E_ALL);

require_once __DIR__ . '/../vendor/autoload.php';

if (!file_exists(__DIR__ . '/settings.php')) {
    throw new RuntimeException('Missing settings.php!');
}
$settings = require __DIR__ . '/settings.php';

$file = __DIR__ . '/assets/tektown/Laboratory-Report.pdf';
$certificateSerialNumber = $settings['certificateSerialNumber'];
// A requestID generated by the client to identify this signature operation (6 alphanumeric characters)
$requestId = '123456';

$caBundle = realpath(__DIR__ . '/assets/globaltrust-all.pem');

$httpClient = new GuzzleClient([
    'handler' => new CurlHandler(),
    // note: guzzle requires this parameter to fully support PSR-18
    'http_errors' => false,
    'verify' => $caBundle,
    // timeout by api after ~300 seconds
    'timeout' => 360,
]);
// only required if you are using guzzle < 7
$httpClient = new Psr18Wrapper($httpClient);
$requestFactory = new RequestFactory();
$streamFactory = new StreamFactory();

$client = new Client(
    $httpClient,
    $requestFactory,
    $streamFactory,
    $settings['apiUrl'],
    $settings['username'],
    $settings['activationPin']
);

$batch = new Batch($client, $requestId, $certificateSerialNumber);
$batch->getTrustedCertificates()
    ->add(SetaPDF_Signer_Pem::extractFromFile($caBundle));

// create a re-usable array of filenames (in/out)
$files = [
    [
        'in' => new SetaPDF_Core_Reader_File('assets/tektown/Laboratory-Report.pdf'),
        'out' => 'output/tektown-signed.pdf'
    ],
    [
        'in' => new SetaPDF_Core_Reader_String(file_get_contents('assets/lenstown/Laboratory-Report.pdf')),
        'out' => 'output/lenstown-signed.pdf'
    ],
    [
        'in' => 'assets/etown/Laboratory-Report.pdf',
        'out' => 'output/etown-signed.pdf'
    ],
    [
        'in' => 'assets/camtown/Laboratory-Report.pdf',
        'out' => 'output/camtown-signed.pdf'
    ],
];

$batch->sign($files);
